#demo: deploy atlas-osb to kubernetis cluster

on:
  workflow_dispatch:
    input:
      namespace:
        description: "k8s Namespace"
        required: false

name: K8s Demo.

jobs:
  k8s-demo-broker:
    name: Build image, push to DockerHub and deploy to k8s cluster
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Get Tag for the image
        id: tag
        run: |
          branch=$(echo $GITHUB_REF | awk -F "/" '{print $3}')
          echo "::set-output name=tag::demo-$branch"

      - name: Push Atlas-osb to Registry
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
          repository: ${{ secrets.REGISTRY_REPO }}
          tags: ${{ steps.tag.outputs.tag }}

      - name: deploy Atlas-osb
        with:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: ${{ github.event.inputs.namespace }}
          atlas_public_key: ${{ secrets.ATLAS_PUBLIC_KEY }}
          atlas_private_key: ${{ secrets.ATLAS_PRIVATE_KEY }}
          atlas_org_id: ${{ secrets.ATLAS_ORG_ID }}
          image: ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_REPO }}:${{ steps.tag.outputs.tag }}
        run: |
          set -e
          ./.github/base-dockerfile/helpers/install_k8s_helm.sh
          source ".github/base-dockerfile/helpers/params.sh"

          #prepare env
          echo "$INPUT_KUBE_CONFIG_DATA" >> ./kube.config
          export KUBECONFIG="./kube.config"

          helm version
          kubectl version

          echo "leori/atlas-osb:${branch_name}"
          helm install "${K_BROKER}" \
              --set namespace="${K_NAMESPACE}" \
              --set image="${INPUT_IMAGE}" \
              --set atlas.orgId="${INPUT_ATLAS_ORG_ID}" \
              --set atlas.publicKey="${INPUT_ATLAS_PUBLIC_KEY}" \
              --set atlas.privateKey="${INPUT_ATLAS_PRIVATE_KEY}" \
              --set broker.auth.username="${K_DEFAULT_USER}" \
              --set broker.auth.password="${K_DEFAULT_PASS}" \
              samples/helm/broker/ --namespace "${K_NAMESPACE}" --wait --timeout 10m --create-namespace

          kubectl get all -n "${K_NAMESPACE}"
