module RBS
  class Subtractor
    type decl_with_members = AST::Declarations::Class | AST::Declarations::Module | AST::Declarations::Interface

    @minuend: Array[AST::Declarations::t]
    @subtrahend: Environment

    @type_name_resolver: Resolver::TypeNameResolver

    def initialize: (Array[AST::Declarations::t] minuend, Environment subtrahend) -> void

    def call: (?Array[AST::Declarations::t], ?context: Resolver::context) -> Array[AST::Declarations::t]

    private def filter_members: (decl_with_members, context: Resolver::context) -> decl_with_members

    private def member_exist?: (TypeName, AST::Members::t, context: Resolver::context) -> boolish

    private def update_decl: (decl_with_members, members: Array[AST::Declarations::t | AST::Members::t]) -> decl_with_members

    private def absolute_typename: (TypeName, context: Resolver::context) -> TypeName
  end
end
